// Code generated by protoc-gen-go.
// source: server.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	server.proto

It has these top-level messages:
	Server
	ListRequest
	ListResponse
	AttachRequest
	ServerOutput
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Server struct {
	Id       string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Address  string   `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Port     string   `protobuf:"bytes,4,opt,name=port" json:"port,omitempty"`
	Iwad     string   `protobuf:"bytes,5,opt,name=iwad" json:"iwad,omitempty"`
	Pwads    []string `protobuf:"bytes,6,rep,name=pwads" json:"pwads,omitempty"`
	GameType string   `protobuf:"bytes,7,opt,name=game_type,json=gameType" json:"game_type,omitempty"`
	Status   string   `protobuf:"bytes,8,opt,name=status" json:"status,omitempty"`
}

func (m *Server) Reset()                    { *m = Server{} }
func (m *Server) String() string            { return proto1.CompactTextString(m) }
func (*Server) ProtoMessage()               {}
func (*Server) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ListResponse struct {
	Servers []*Server `protobuf:"bytes,1,rep,name=servers" json:"servers,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListResponse) GetServers() []*Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

type AttachRequest struct {
	Id  string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *AttachRequest) Reset()                    { *m = AttachRequest{} }
func (m *AttachRequest) String() string            { return proto1.CompactTextString(m) }
func (*AttachRequest) ProtoMessage()               {}
func (*AttachRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ServerOutput struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *ServerOutput) Reset()                    { *m = ServerOutput{} }
func (m *ServerOutput) String() string            { return proto1.CompactTextString(m) }
func (*ServerOutput) ProtoMessage()               {}
func (*ServerOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto1.RegisterType((*Server)(nil), "proto.Server")
	proto1.RegisterType((*ListRequest)(nil), "proto.ListRequest")
	proto1.RegisterType((*ListResponse)(nil), "proto.ListResponse")
	proto1.RegisterType((*AttachRequest)(nil), "proto.AttachRequest")
	proto1.RegisterType((*ServerOutput)(nil), "proto.ServerOutput")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Daemon service

type DaemonClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Attach(ctx context.Context, opts ...grpc.CallOption) (Daemon_AttachClient, error)
}

type daemonClient struct {
	cc *grpc.ClientConn
}

func NewDaemonClient(cc *grpc.ClientConn) DaemonClient {
	return &daemonClient{cc}
}

func (c *daemonClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/proto.Daemon/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *daemonClient) Attach(ctx context.Context, opts ...grpc.CallOption) (Daemon_AttachClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Daemon_serviceDesc.Streams[0], c.cc, "/proto.Daemon/Attach", opts...)
	if err != nil {
		return nil, err
	}
	x := &daemonAttachClient{stream}
	return x, nil
}

type Daemon_AttachClient interface {
	Send(*AttachRequest) error
	Recv() (*ServerOutput, error)
	grpc.ClientStream
}

type daemonAttachClient struct {
	grpc.ClientStream
}

func (x *daemonAttachClient) Send(m *AttachRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *daemonAttachClient) Recv() (*ServerOutput, error) {
	m := new(ServerOutput)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Daemon service

type DaemonServer interface {
	List(context.Context, *ListRequest) (*ListResponse, error)
	Attach(Daemon_AttachServer) error
}

func RegisterDaemonServer(s *grpc.Server, srv DaemonServer) {
	s.RegisterService(&_Daemon_serviceDesc, srv)
}

func _Daemon_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DaemonServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Daemon/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DaemonServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Daemon_Attach_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DaemonServer).Attach(&daemonAttachServer{stream})
}

type Daemon_AttachServer interface {
	Send(*ServerOutput) error
	Recv() (*AttachRequest, error)
	grpc.ServerStream
}

type daemonAttachServer struct {
	grpc.ServerStream
}

func (x *daemonAttachServer) Send(m *ServerOutput) error {
	return x.ServerStream.SendMsg(m)
}

func (x *daemonAttachServer) Recv() (*AttachRequest, error) {
	m := new(AttachRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Daemon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Daemon",
	HandlerType: (*DaemonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Daemon_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Attach",
			Handler:       _Daemon_Attach_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("server.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x41, 0x4f, 0x3a, 0x31,
	0x10, 0xc5, 0x29, 0x0b, 0x05, 0x06, 0xf8, 0xe7, 0x9f, 0x91, 0x98, 0x46, 0x2f, 0x9b, 0x5e, 0xdc,
	0x13, 0x11, 0x3c, 0x18, 0x8f, 0x26, 0x1e, 0x4d, 0x4c, 0x56, 0xef, 0xa6, 0xda, 0x06, 0xf7, 0xb0,
	0x6c, 0xdd, 0xe9, 0x42, 0xf8, 0x68, 0x7e, 0x3b, 0xd3, 0x76, 0x97, 0x40, 0x3c, 0xed, 0x7b, 0xbf,
	0x79, 0xdb, 0xbe, 0x29, 0xcc, 0xc8, 0xd4, 0x3b, 0x53, 0x2f, 0x6d, 0x5d, 0xb9, 0x0a, 0x87, 0xe1,
	0x23, 0x7f, 0x18, 0xf0, 0xd7, 0xc0, 0xf1, 0x1f, 0xf4, 0x0b, 0x2d, 0x58, 0xca, 0xb2, 0x49, 0xde,
	0x2f, 0x34, 0x22, 0x0c, 0xb6, 0xaa, 0x34, 0xa2, 0x1f, 0x48, 0xd0, 0x28, 0x60, 0xa4, 0xb4, 0xae,
	0x0d, 0x91, 0x48, 0x02, 0xee, 0xac, 0x4f, 0xdb, 0xaa, 0x76, 0x62, 0x10, 0xd3, 0x5e, 0x7b, 0x56,
	0xec, 0x95, 0x16, 0xc3, 0xc8, 0xbc, 0xc6, 0x05, 0x0c, 0xed, 0x5e, 0x69, 0x12, 0x3c, 0x4d, 0xb2,
	0x49, 0x1e, 0x0d, 0x5e, 0xc3, 0x64, 0xa3, 0x4a, 0xf3, 0xee, 0x0e, 0xd6, 0x88, 0x51, 0x88, 0x8f,
	0x3d, 0x78, 0x3b, 0x58, 0x83, 0x97, 0xc0, 0xc9, 0x29, 0xd7, 0x90, 0x18, 0x87, 0x49, 0xeb, 0xe4,
	0x1c, 0xa6, 0xcf, 0x05, 0xb9, 0xdc, 0x7c, 0x37, 0x86, 0x9c, 0xbc, 0x87, 0x59, 0xb4, 0x64, 0xab,
	0x2d, 0x19, 0xbc, 0x81, 0x51, 0xdc, 0x98, 0x04, 0x4b, 0x93, 0x6c, 0xba, 0x9e, 0xc7, 0xd5, 0x97,
	0x71, 0xdf, 0xbc, 0x9b, 0xca, 0x15, 0xcc, 0x1f, 0x9d, 0x53, 0x9f, 0x5f, 0xed, 0x49, 0x7f, 0x5e,
	0xe2, 0x3f, 0x24, 0x25, 0x6d, 0xda, 0x87, 0xf0, 0x52, 0xa6, 0x30, 0x8b, 0xa7, 0xbc, 0x34, 0xce,
	0x36, 0xae, 0x4b, 0xb0, 0x63, 0x62, 0xbd, 0x03, 0xfe, 0xa4, 0x4c, 0x59, 0x6d, 0x71, 0x05, 0x03,
	0xdf, 0x0b, 0xb1, 0xbd, 0xfe, 0xa4, 0xf3, 0xd5, 0xc5, 0x19, 0x8b, 0xc5, 0x65, 0x0f, 0x1f, 0x80,
	0xc7, 0x46, 0xb8, 0x68, 0x03, 0x67, 0x05, 0x8f, 0xbf, 0x9d, 0x76, 0x90, 0xbd, 0x8c, 0xdd, 0xb2,
	0x0f, 0x1e, 0x26, 0x77, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xed, 0x58, 0x0e, 0xee, 0x01,
	0x00, 0x00,
}
